[{"path":[]},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to plumber2posit","title":"Contributing to plumber2posit","text":"outlines propose change plumber2posit.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to plumber2posit","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to plumber2posit","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to plumber2posit","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jonthegeek/plumber2posit\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to plumber2posit","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to plumber2posit","text":"Please note plumber2posit project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 plumber2posit authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with plumber2posit","title":"Getting help with plumber2posit","text":"Thanks using plumber2posit! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with plumber2posit","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with plumber2posit","text":"Armed reprex, next step figure ask. ’s question: ’s best ask R4DS Online Learning Community Slack. options include Posit Community, StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with plumber2posit","text":"’ll try look issue soon can, packages maintained volunteers. good reprex particularly important might weeks months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). plumber2posit: Plumber Posit Services. R package version 0.0.0.9000,  https://jonthegeek.github.io/plumber2posit/, https://github.com/jonthegeek/plumber2posit.","code":"@Manual{,   title = {plumber2posit: Plumber on Posit Services},   author = {Jon Harmon},   year = {2023},   note = {R package version 0.0.0.9000,  https://jonthegeek.github.io/plumber2posit/},   url = {https://github.com/jonthegeek/plumber2posit}, }"},{"path":"https://jonthegeek.github.io/plumber2posit/index.html","id":"plumber2posit","dir":"","previous_headings":"","what":"Plumber on Posit Services","title":"Plumber on Posit Services","text":"Deploying APIs wrapped packages can tricky, accessing APIs ‘Posit Cloud’ tricky. package seeks alleviate pain points process.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plumber on Posit Services","text":"can install development version plumber2posit GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jonthegeek/plumber2posit\")"},{"path":"https://jonthegeek.github.io/plumber2posit/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Plumber on Posit Services","text":"Add usage information examples .","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Plumber on Posit Services","text":"Please note plumber2posit project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_httr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Source code for a cookie endpoint that uses httr2 — cookie_endpoint_httr2","title":"Source code for a cookie endpoint that uses httr2 — cookie_endpoint_httr2","text":"Posit Cloud uses cookie identify user. output function can used add \"/cookie\" endpoint api order allow users easily extract Posit Cloud cookie endpoint use cookie httr2 package.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_httr2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source code for a cookie endpoint that uses httr2 — cookie_endpoint_httr2","text":"","code":"cookie_endpoint_httr2(default_cookie_name = \"therealshinyapps\")"},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_httr2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source code for a cookie endpoint that uses httr2 — cookie_endpoint_httr2","text":"default_cookie_name Character. name cookie use user request different cookie.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_httr2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source code for a cookie endpoint that uses httr2 — cookie_endpoint_httr2","text":"source code cookie endpoint character.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_httr2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Source code for a cookie endpoint that uses httr2 — cookie_endpoint_httr2","text":"","code":"cookie_endpoint_httr2() #> plumber::pr_get(\"/cookie\", function(req) { #> cookie_nm <- req$argsQuery[[\"cookie_name\"]] #> if (is.null(cookie_nm)) cookie_nm <- \"therealshinyapps\" #> cookie_value <- req$cookies[[cookie_nm]] #> glue::glue(\"httr2::req_headers(Cookie = '{cookie_nm}={cookie_value}')\") #> }, serializer = plumber::serializer_text()) cookie_endpoint_httr2(\"another_cookie_name\") #> plumber::pr_get(\"/cookie\", function(req) { #> cookie_nm <- req$argsQuery[[\"cookie_name\"]] #> if (is.null(cookie_nm)) cookie_nm <- \"another_cookie_name\" #> cookie_value <- req$cookies[[cookie_nm]] #> glue::glue(\"httr2::req_headers(Cookie = '{cookie_nm}={cookie_value}')\") #> }, serializer = plumber::serializer_text())"},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Source code for a simple cookie endpoint — cookie_endpoint_simple","title":"Source code for a simple cookie endpoint — cookie_endpoint_simple","text":"Posit Cloud uses cookie identify user. output function can used add \"/cookie\" endpoint api order allow users easily extract Posit Cloud cookie endpoint.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source code for a simple cookie endpoint — cookie_endpoint_simple","text":"","code":"cookie_endpoint_simple(default_cookie_name = \"therealshinyapps\")"},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source code for a simple cookie endpoint — cookie_endpoint_simple","text":"default_cookie_name Character. name cookie use user request different cookie.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source code for a simple cookie endpoint — cookie_endpoint_simple","text":"source code simple cookie endpoint character.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/cookie_endpoint_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Source code for a simple cookie endpoint — cookie_endpoint_simple","text":"","code":"cookie_endpoint_simple() #> plumber::pr_get(\"/cookie\", function(req) { #> cookie_nm <- req$argsQuery[[\"cookie_name\"]] #> if (is.null(cookie_nm)) cookie_nm <- \"therealshinyapps\" #> req$cookies[[cookie_nm]] #> }, serializer = plumber::serializer_text()) cookie_endpoint_simple(\"another_cookie_name\") #> plumber::pr_get(\"/cookie\", function(req) { #> cookie_nm <- req$argsQuery[[\"cookie_name\"]] #> if (is.null(cookie_nm)) cookie_nm <- \"another_cookie_name\" #> req$cookies[[cookie_nm]] #> }, serializer = plumber::serializer_text())"},{"path":"https://jonthegeek.github.io/plumber2posit/reference/deploy_pkg_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a Package's API to Posit — deploy_pkg_api","title":"Deploy a Package's API to Posit — deploy_pkg_api","text":"plumber::plumb_api() added plumber 1.0.0 standardize process wrap API inside package. However, deploying API takes extra steps. function streamlines process.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/deploy_pkg_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a Package's API to Posit — deploy_pkg_api","text":"","code":"deploy_pkg_api(   package,   folder_name,   ...,   cookie_endpoint_src = cookie_endpoint_httr2(),   server = \"posit.cloud\",   api_name = folder_name )"},{"path":"https://jonthegeek.github.io/plumber2posit/reference/deploy_pkg_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a Package's API to Posit — deploy_pkg_api","text":"package Character. name package contains API. folder_name Character. name folder contains API. ... Additional arguments rsconnect::deployApp(). cookie_endpoint_src Character. source code cookie endpoint, returned cookie_endpoint_httr2() (default) cookie_endpoint_simple(). server Character. server deploy . Defaults \"posit.cloud\". api_name Character. name API. Defaults folder_name.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/deploy_pkg_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deploy a Package's API to Posit — deploy_pkg_api","text":"Whether deployment successful, invisibly.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/plumber2posit-package.html","id":null,"dir":"Reference","previous_headings":"","what":"plumber2posit: Plumber on Posit Services — plumber2posit-package","title":"plumber2posit: Plumber on Posit Services — plumber2posit-package","text":"Deploying APIs wrapped packages can tricky, accessing APIs 'Posit Cloud' tricky. package seeks alleviate pain points process.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/plumber2posit/reference/plumber2posit-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plumber2posit: Plumber on Posit Services — plumber2posit-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/redeploy_pkg_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Redeploy a Package's API to Posit — redeploy_pkg_api","title":"Redeploy a Package's API to Posit — redeploy_pkg_api","text":"API deployed Posit Cloud, deploying something name automatically update existing API. Instead, must supply appId argument rsconnect::deployApp(), appName argument. function walks process.","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/redeploy_pkg_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Redeploy a Package's API to Posit — redeploy_pkg_api","text":"","code":"redeploy_pkg_api(   package,   folder_name,   app_id,   ...,   cookie_endpoint_src = NULL,   server = \"posit.cloud\" )"},{"path":"https://jonthegeek.github.io/plumber2posit/reference/redeploy_pkg_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Redeploy a Package's API to Posit — redeploy_pkg_api","text":"package Character. name package contains API. folder_name Character. name folder contains API. app_id Character numeric. number identifies API. can find number URL API's page Posit Cloud. example, app posit.cloud/content/12345, id \"12345\". ... Additional arguments rsconnect::deployApp(). cookie_endpoint_src Character. source code cookie endpoint, returned cookie_endpoint_httr2() cookie_endpoint_simple(). default NULL remove cookie endpoint. server Character. server deploy . Defaults \"posit.cloud\".","code":""},{"path":"https://jonthegeek.github.io/plumber2posit/reference/redeploy_pkg_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Redeploy a Package's API to Posit — redeploy_pkg_api","text":"Whether deployment successful, invisibly.","code":""}]
